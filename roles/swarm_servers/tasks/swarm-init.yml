# roles/swarm_servers/tasks/swarm-init.yml
# Create Swarm on first master, join other masters, and join workers.

# Create Swarm and copy tokens
- name: Swarm | Creat | Pause for docker.
  ansible.builtin.pause:
    seconds: 3

- name: Swarm | Create | Create new Docker Swarm.
  community.docker.docker_swarm:
    state: present
  #when: inventory_hostname in groups['masters'][0]
  notify: restart-docker

- name: Swarm | Create | Set manager token.
  ansible.builtin.shell: docker swarm join-token -q manager
  register: token_manager
  #when: inventory_hostname in groups['masters'][0]

- name: Swarm | Create | Set worker token.
  ansible.builtin.shell: docker swarm join-token -q worker
  register: token_worker
  #when: inventory_hostname in groups['masters'][0]

- name: Swarm | Creat | Pause for docker.
  ansible.builtin.pause:
    seconds: 3

# Join master and worker nodes to Swarm cluster
#- name: Swarm | Join | Join master nodes.
#  community.docker.docker_swarm:
#    state: join
#    join_token: "{{ hostvars[groups['masters'][0]]['token_manager']['stdout'] }}"
#    remote_addrs: "{{ hostvars[groups['masters'][0]]['ansible_fqdn'] }}:2377"
#  when: inventory_hostname in groups['masters'][1:]
#  notify: restart-docker
#
#- name: Swarm | Creat | Pause for docker.
#  ansible.builtin.pause:
#    seconds: 3
#
#- name: Swarm | Join | Promote manager nodes.
#  community.docker.docker_node:
#    hostname: '{{ hostvars[item].ansible_hostname }}'
#    role: manager
#    availability: active #traefik and portainer must run on manager nodes
#  loop: "{{ groups['masters'] }}"
#  when: inventory_hostname in groups['masters'][0]
#
#- name: Swarm | Creat | Pause for docker.
#  ansible.builtin.pause:
#    seconds: 3
#
#- name: Swarm | Join | Join worker nodes.
#  community.docker.docker_swarm:
#    state: join
#    join_token: "{{ hostvars[groups['masters'][0]]['token_worker']['stdout'] }}"
#    remote_addrs: "{{ hostvars[groups['masters'][0]]['ansible_fqdn'] }}:2377"
#  when: inventory_hostname in groups['workers']
#  notify: restart-docker
#
#- name: Swarm | Creat | Pause for docker.
#  ansible.builtin.pause:
#    seconds: 3

# Add nodes lables
#- name: Swarm | Labels | Add manager labels.
#  community.docker.docker_node:
#    hostname: '{{ hostvars[item].ansible_hostname }}'
#    labels:
#      nodetype: manager
#    labels_state: replace
#  loop: "{{ groups['masters'] }}"
#  when: inventory_hostname in groups['masters'][0]
#
#- name: Swarm | Labels | Add worker labels.
#  community.docker.docker_node:
#    hostname: '{{ hostvars[item].ansible_hostname }}'
#    labels:
#      nodetype: worker
#    labels_state: replace
#  loop: "{{ groups['workers'] }}"
#  when: inventory_hostname in groups['masters'][0]

# Reboot Swarm servers
- name: Swarm | Reboot all servers.
  ansible.builtin.reboot:

- name: Swarm | Pause to let servers reboot.
  ansible.builtin.pause:
    seconds: 20
